openapi: "3.0.0"
info:
  title: Go-book-review API
  version: 0.0.1
servers:
  - url: http://{host}:{port}
    description: 開発用
    variables:
      host:
        default: localhost
      port:
        default: '8000'
paths:
  "/api/_healthz":
    get:
      summary: "ヘルスチェック"
      tags:
        - common
      responses:
        "200":
          description: "ok"
          content:
            application/json:
              schema:
                type: string
  "/signup":
    post:
      summary: "sign up"
      tags:
        - session
      requestBody:
        $ref: '#/components/requestBodies/authentication-request'
      responses:
        "201":
          description: "Created"
      operationId: signup
  "/login":
    post:
      summary: "login"
      tags:
        - session
      requestBody:
        $ref: '#/components/requestBodies/authentication-request'
      responses:
        "200":
          $ref: '#/components/responses/login-response'
      operationId: login
  "/api/books":
    get:
      summary: "usernameから複数のbook_idを取得。それぞれのbook_idから本の情報を取得"
      tags:
        - book
      responses:
        "200":
          $ref: '#/components/responses/books-response'
      operationId: getBooks
    post:
      summary: "新たなbookを登録"
      tags:
        - book
      requestBody:
        $ref: '#/components/requestBodies/book-request'
      responses:
        "204":
          description: 成功
        "400":
          description: 失敗
      operationId: postBooks
  "/api/books/{book-id}":
    parameters:
      - $ref: '#/components/parameters/book-id'
    get:
      summary: "book_idから本の情報を取得"
      tags:
        - book
      responses:
        "200":
          $ref: '#/components/responses/book-response'
      operationId: getBook
    delete:
      summary: "book_idの本を削除"
      tags:
        - book
      responses:
        "204":
          description: No Content
      operationId: deleteBook
  "/api/books/{book-id}/status":
    parameters:
      - $ref: '#/components/parameters/book-id'
    put:
      summary: "statusの変更を行う"
      tags:
        - book
      parameters:
        - $ref: '#/components/parameters/status'
      responses:
        "204":
          description: 成功
      operationId: putBook
  "/api/summaries":
    get:
      summary: "book_idのsummary_idのsummaryを全取得"
      tags:
        - summary
      parameters:
        - $ref: '#/components/parameters/query-book-id'
      responses:
        "200":
          $ref: '#/components/responses/summaries-response'
      operationId: getSummaries
    post:
      summary: "book_idのsummaryを登録"
      tags:
        - summary
      requestBody:
        $ref: '#/components/requestBodies/summary-request'
      responses:
        "204":
          description: 成功
        "400":
          description: 失敗
      operationId: postSummaries
  "/api/summaries/{summary-id}":
    parameters:
      - $ref: '#/components/parameters/summary-id'
    get:
      summary: "summary_idのsummaryを取得"
      tags:
        - summary
      responses:
        "200":
          $ref: '#/components/responses/summary-response'
      operationId: getSummary
    put:
      summary: "summary_idのsummaryを修正"
      tags:
        - summary
      requestBody:
        $ref: '#/components/requestBodies/put-summary-request'
      responses:
        "204":
          description: 成功
      operationId: putSummary
    delete:
      summary: "summary_idのsummaryを削除"
      tags:
        - summary
      responses:
        "204":
          description: No Content
      operationId: deleteSummary
  "/api/tags":
    get:
      summary: "usernameのタグを全取得"
      tags:
        - tag
      responses:
        "200":
          $ref: '#/components/responses/tags-response'
      operationId: getTags
    post:
      summary: "usernameのtagリストにtagを追加"
      tags:
        - tag
      requestBody:
        $ref: '#/components/requestBodies/tag-request'
      responses:
        "204":
          description: 成功
        "400":
          description: 失敗
      operationId: postTags
  "/api/tags/{tag-id}":
    parameters:
      - $ref: '#/components/parameters/tag-id'
    get:
      summary: "username, tag_idのtagを取得"
      tags:
        - tag
      responses:
        "200":
          $ref: '#/components/responses/tag-response'
      operationId: getTag
    put:
      summary: "username, tag_idのtagを修正"
      tags:
        - tag
      requestBody:
        $ref: '#/components/requestBodies/put-tag-request'
      responses:
        "204":
          description: 成功
      operationId: putTag
    delete:
      summary: "username, tag_idのtagを修正"
      tags:
        - tag
      responses:
        "204":
          description: No Content
      operationId: deleteTag
components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      description: cognito jwt token
  parameters:
    book-id:
      in: path
      name: book-id
      schema:
        type: integer
        format: int64
      required: true
    status:
      in: query
      name: status
      schema:
        $ref: '#/components/schemas/book-status'
      required: true
    summary-id:
      in: path
      name: summary-id
      schema:
        type: integer
        format: int64
      required: true
    tag-id:
      in: path
      name: tag-id
      schema:
        type: integer
        format: int64
      required: true
    query-book-id:
      in: query
      name: book_id
      schema:
        type: integer
        format: int64
      required: true
  schemas:
    login:
      type: object
      properties:
        token:
          type: string
          description: jwtのトークン
    books:
      type: array
      items:
        $ref: "#/components/schemas/book"
      required:
        - items
    book:
      type: object
      properties:
        book_id:
          type: integer
          format: int64
          description: uuid
        title:
          type: string
        image:
          type: string
          format: binary
        status:
          $ref: '#/components/schemas/book-status'
        summaries:
          $ref: '#/components/schemas/summaries'
        tags:
          $ref: '#/components/schemas/tags'
      required:
        - book_id
        - title
    book-status:
      type: string
      enum:
        - want # 読みたい
        - will # 積読
        - doing # 読んでいる
        - done # 読み終わった
    summaries:
      type: array
      items:
        $ref: "#/components/schemas/summary"
      required:
        - items
    summary:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: uuid
        content:
          type: string
      required:
        - id
        - content
    tags:
      type: array
      items:
        $ref: "#/components/schemas/tag"
      required:
        - items
    tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: uuid
        name:
          type: string
      required:
        - id
        - name
  requestBodies:
    authentication-request:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              username:
                type: string
                description: username
              password:
                type: string
                description: password
    book-request:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              amazon_url:
                type: string
                description: amazon_url
    summary-request:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              book_id:
                type: integer
                format: int64
                description: book_id
              content:
                type: string
                description: summary
    put-summary-request:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              content:
                type: string
                description: summary
    tag-request:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: tag
    put-tag-request:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: tag
  responses:
    login-response:
      description: 成功
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/login'
    books-response:
      description: 成功
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/books'
    book-response:
      description: 成功
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/book'
    summaries-response:
      description: 成功
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/summaries'
    summary-response:
      description: 成功
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/summary'
    tags-response:
      description: 成功
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tags'
    tag-response:
      description: 成功
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tag'
